#include "diretorio.h"
#include <stdio.h>
#include <stdlib.h>

void inicializarIndice(IndiceArquivador* idx) {
    idx->membros = NULL;
    idx->quantidade = 0;
    idx->capacidade = 0;
}

void destruirIndice(IndiceArquivador* idx) {
    free(idx->membros);
    idx->membros = NULL;
    idx->quantidade = 0;
    idx->capacidade = 0;
}

void adicionarAoIndice(IndiceArquivador* idx, ArquivoMembro membro) {
    // Verifica se precisa aumentar o tamanho do array
    if (idx->quantidade >= idx->capacidade) {
        int novaCapacidade = (idx->capacidade == 0) ? 1 : idx->capacidade * 2;
        ArquivoMembro* novoArray = realloc(idx->membros, novaCapacidade * sizeof(ArquivoMembro));
        if (novoArray == NULL) {
            fprintf(stderr, "Erro: Falha na alocação de memória\n");
            return;
        }
        idx->membros = novoArray;
        idx->capacidade = novaCapacidade;
    }

    // Adiciona o novo membro
    idx->membros[idx->quantidade] = membro;
    idx->quantidade++;
}

int carregarIndice(FILE* vc, IndiceArquivador* idx) {
    // Volta ao início do arquivo
    rewind(vc);

    // Lê a quantidade de membros
    if (fread(&idx->quantidade, sizeof(int), 1, vc) != 1) {
        return -1;
    }

    // Aloca espaço para os membros
    idx->capacidade = idx->quantidade;
    idx->membros = malloc(idx->quantidade * sizeof(ArquivoMembro));
    if (idx->membros == NULL) {
        return -1;
    }

    // Lê todos os membros
    if (fread(idx->membros, sizeof(ArquivoMembro), idx->quantidade, vc) != idx->quantidade) {
        free(idx->membros);
        idx->membros = NULL;
        idx->quantidade = 0;
        idx->capacidade = 0;
        return -1;
    }

    return 0;
}

int salvarIndice(FILE* vc, IndiceArquivador* idx) {
    // Volta ao início do arquivo
    rewind(vc);

    // Escreve a quantidade de membros
    if (fwrite(&idx->quantidade, sizeof(int), 1, vc) != 1) {
        return -1;
    }

    // Escreve todos os membros
    if (fwrite(idx->membros, sizeof(ArquivoMembro), idx->quantidade, vc) != idx->quantidade) {
        return -1;
    }

    // Força a escrita no disco
    fflush(vc);
    return 0;
}

void listarArquivos(const IndiceArquivador* idx) {
    printf("Arquivos no arquivador:\n");
    for (int i = 0; i < idx->quantidade; i++) {
        printf("  %d: %s\n", i, idx->membros[i].nome);
    }
}